; ***************************************************************; * Filename: LOG/ASM						*; * Revision: 06.03.01						*; * Rev Date: 18 Dec 97						*; ***************************************************************; * Optional Disk Log program for LS-DOS			*; *								*; ***************************************************************;	TITLE	<LOG - LS-DOS 6.3>;LF	EQU	10CR	EQU	13CRSON	EQU	14;*GET	COPYCOM			; Copyright message*GET	SVCMAC			; System SVC Macros;	ORG	2600H;LOG	@@CKBRKC		; Check for break	JR	Z,LOGA		; Go if not	LD	HL,-1		; Init abort code	RET			;   and abort;LOGA	LD	(STACK),SP	; Save entry stack	PUSH	HL		; Save cmdline ptr	@@DSPLY	HELLO$		; Display signon msg	POP	HL		; Recover cmd line;;	Start of main module code;START	LD	C,00H		; Default drive 0SKIPSP	LD	A,(HL)		; Scan command line	INC	HL	CP	' '		; Skip spaces	JR	Z,SKIPSP	CP	':'		; Look for colon	JR	NZ,DEFALT	; End of line if not found	LD	A,(HL)		; Get drive #	SUB	'0'		; Convert to binary	JP	C,ILLDDRV	; Quit it too low	CP	7+1	JP	NC,ILLDDRV	;   or if too high	LD	C,A		; Save drive # in CDEFALT	LD	A,C		; Drive 0?	AND	A	JR	NZ,NOWAIT	; No need to wait if not	@@DSPLY	WAIT$		; Display "Switch disks	JR	NZ,IOERR	@@KEY			; Wait for a key	JR	NZ,IOERR	PUSH	BC		; Save the drive #	LD	C,0DH		; Output a new line	@@DSP	POP	BC	JR	NZ,IOERR	; Quit on error	JR	NOCHK		; Can't call CKDRV if :0NOWAIT	@@CKDRV	LD	A,32		; Illegal drive #	JR	NZ,IOERR	; Go if not ready;NOCHK	LD	HL,BUFFER	; Sector buffer	LD	DE,0		; Read boot sector	@@RDSEC	JR	NZ,IOERR	@@GTDCT			; Point IY to DCT	INC	HL		; Point to byte 2	INC	HL	LD	A,(HL)		; Get dir cyl	LD	(IY+09H),A	; Put into the DCT;	LD	D,A		; Now read GAT	LD	HL,BUFFER	LD	E,L		; Set to 0	@@RDSEC			; Read the sector	CP	06H		; Must be sys sector	JR	NZ,IOERR	; Go if it isn't	LD	L,0CDH		; Offset to disk type	LD	A,(HL)		; Get disk type	AND	20H		; Check # of sides bit	LD	B,A		; Save in B	LD	A,(IY+04H)	; Get byte from DCT	AND	0DFH		; Mask off old value	OR	B		; Merge new sides value	LD	(IY+04H),A	; Put back in DCT;	LD	HL,0		; Set no error$QUIT	LD	SP,$-$		; Get original stackSTACK	EQU	$-2	@@CKBRKC		; Clear any break	RET			; Back to the user;ILLDDRV	LD	A,32		; Init "Illegal driveIOERR	LD	L,A		; Put error code in HL	LD	H,00H	OR	0C0H		; Short msg, return	LD	C,A	@@ERROR	JR	$QUIT;;	Messages and data area;HELLO$	DB	'LOG Drive'*GET	CLIENTWAIT$	DB	'Exchange disks and depress <ENTER> ',3;	ORG	$<-8+1<+8	; Next memory page;BUFFER	EQU	$;	END	LOG